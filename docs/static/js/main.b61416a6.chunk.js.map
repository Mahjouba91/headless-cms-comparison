{"version":3,"sources":["Cms.tsx","FilterService.tsx","CmsService.tsx","TableTemplates.tsx","CmsList.tsx","GithubRibbon.tsx","CmsCardList.tsx","CmsDetailView.tsx","Analytics.tsx","About.tsx","ErrorBoundary.tsx","Header.tsx","SmallHeader.tsx","Navigation.tsx","Footer.tsx","Description.tsx","FilterPropertyTable.tsx","FilterAside.tsx","FilterMenu.tsx","App.tsx","serviceWorker.js","index.js","About.module.css"],"names":["License","Category","ScoreValue","FilterPreset","PropertyType","FilterService","filterCms","filterFields","cms","filterResults","specialFieldKeys","Object","keys","special","cmsKey","currentCms","has","basic","hasNot","requiredPropertyCount","hasRequiredPropertyCount","niceToHavePropertyCount","hasNiceToHavePropertyCount","satisfactory","fieldKey","currentField","currentCmsProperty","requiredValues","values","undefined","getArrayIntersection","length","properties","CmsService","isScoreField","isOfInterest","fieldIsRequired","isRequired","cmsHasProperty","hasCategoryField","name","description","hasNotCategoryField","assign","subFieldKeys","getKeysOfSubFields","subFieldKey","currentSubField","currentCmsSubProperty","categoryFieldIsEmpty","push","hasRequiredShare","hasNiceToHaveShare","sort","x","y","sortFilterResults","getUnfilteredCms","map","getFilteredFilterFields","panelSettings","showModifiedOnly","fieldFilterString","current","untouchedFields","untouched","workFields","deepcopy","forEach","key","referenceField","a","b","i","arraysAreEqual","untouchedField","value","untouchedSubField","fieldNameContainsString","initializeBasicFields","basicFields","fields","DONT_CARE","subPropertyKeys","initializeSpecialFields","specialFields","category","possibleValues","filter","includes","getPresetFilterFields","preset","newFilter","OPEN_SOURCE","REQUIRED","NICE_TO_HAVE","CLOUD_SERVICE","ENTERPRISE","Enterprise","DOCKER","GRAPHQL","graphQl","console","error","scoreField","field","str","toUpperCase","cmsProperty","categoryProperty","cmsData","CMS_REPO_BASE_URL","CMS_LIST_PATH","getCmsData","fetch","then","response","json","data","fetchCmsData","rawCmsData","promises","ok","Error","statusText","Promise","all","fieldsData","rawCms","sortCmsByName","slice","parsedCms","parseCms","cmsArray","toLowerCase","licenses","license","split","licensesAreValid","categories","categoriesAreValid","currentProperty","parseValue","type","subKey","lastUpdated","version","inception","systemRequirements","specialFeatures","gitHubURL","teaser","p","info","test","startsWith","match","exec","warn","Boolean","TitleTemplate","rowData","column","cellData","className","NameTemplate","to","BooleanPropertyTemplate","bool","aria-label","style","color","SpecialPropertyTemplate","sortData","event","aData","bData","aValue","bValue","order","CmsList","props","tableCms","prop","toString","currentSubKey","currentSubProperty","convertCmsToTableDataStructure","columns","convertToColumn","frozen","template","basicFieldKeys","currentFieldKey","currentSubPropertyKey","constructColumnDataStructure","id","Helmet","Container","Card","autoLayout","scrollable","scrollHeight","frozenWidth","propertyKey","propertyDisplayName","header","body","sortable","sortFunction","e","GithubRibbon","url","href","target","rel","display","width","height","viewBox","aria-hidden","d","fill","CardList","Cards","some","result","satisfactoryResultsExist","cards","cardNumber","CmsCard","filterResult","NoResultsCard","CmsTeaser","classes","classnames","Body","CmsCardText","cardListElements","toFixed","OverlayTrigger","placement","delay","show","hide","overlay","renderNiceToHaveProgressBarTooltip","marginRight","ProgressBar","animated","now","variant","listStyleType","paddingLeft","share","barText","Tooltip","bg","border","Title","role","Text","CmsDetailView","useParams","Alert","Button","filterResultIndex","findIndex","genericValues","categoryValues","basicFilterFields","basicFilterSubFields","catprop","subkey","subprop","createCard","textAlign","genericCard","categoryCards","categoryName","Row","Col","PropertyList","Date","toDateString","hasProperties","categorizePropertiesByScores","hasNotProperties","categorizedProperties","required","niceToHave","requiredListItems","constructResultListItems","RequiredSummaryListItem","niceToHaveListItems","NiceToHaveSummaryListItem","aria-sort","indexedPropertyArray","requiredProperties","niceToHaveProperties","indexedPropertyArrayCopy","isScoreFilterProperty","hasSubKeys","fieldSet","listItems","hasKey","ResultListItem","property","hasNotKey","icon","colSpan","fontSize","label","Analytics","useState","accepted","setAccepted","onAccepted","ReactGA","initialize","debug","process","useEffect","Cookies","get","location","useLocation","React","pageview","pathname","search","onAccept","About","githubUrl","genticsUrl","styles","aboutContent","imprint","ErrorBoundary","state","hasError","errorInfo","this","children","Component","Header","src","alt","SmallHeader","title","Navigation","year","getFullYear","Footer","Description","size","CheckboxRow","checkboxes","specialField","possibleValue","checked","changeHandler","SimpleCheckbox","onChange","htmlFor","paddingRight","CategoryCard","ScoreRow","categoryKey","ScoreValueCheckbox","NoResultsRow","FilterPropertyTable","specialFieldChangeHandler","basicFieldChangeHandler","generalRows","categoryRows","maxHeight","overflow","FilterAside","updateFilterFields","showAside","toggleAside","setPanelSettings","handlePanelSettingsChange","filteredFilterFields","visible","onHide","Form","Control","updatedFilterFields","valueArray","valueIndex","indexOf","splice","FilterMenu","activeClassFor","classNames","active","activePreset","presetButtons","onClick","resetToPreset","App","appState","setAppState","untouchedFilterFields","constructAppState","updatedAppState","document","classList","remove","add","content","basename","exact","path","defaultTitle","titleTemplate","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.b61416a6.chunk.js","sourcesContent":["///////////\n// ENUMS //\n///////////\n\nexport enum License {\n  GPLv3 = \"GPLv3\",\n  Proprietary = \"Proprietary\",\n  Apache_2 = \"Apache-2.0\",\n  BSD_3 = \"BSD 3-Clause\",\n  MIT = \"MIT\",\n  Other = \"Other\", // No-match fallback value\n}\n\nexport enum Category {\n  Essential = \"Essential\",\n  Professional = \"Professional\",\n  Enterprise = \"Enterprise\",\n}\n\n// Tristate boolean for \"scoring\"\nexport enum ScoreValue {\n  DONT_CARE = \"Don't Care\",\n  NICE_TO_HAVE = \"Nice-to-Have\",\n  REQUIRED = \"Required\",\n}\n\n/////////////////////\n// CORE INTERFACES //\n/////////////////////\n\nexport type CmsData = { [cmsName: string]: Cms };\n\nexport interface AppState {\n  cms: CmsData;\n  filterFields: {\n    current: FilterFieldSet;\n    untouched: FilterFieldSet;\n    activePreset: ActivePreset;\n  };\n  filterResults: FilterResult[];\n  showAside: boolean;\n}\n\nexport interface ReceivedCmsData {\n  fields: { [x: string]: any };\n  cms: CmsData;\n}\n\nexport interface PanelSettings {\n  showModifiedOnly: boolean;\n  fieldFilterString: string;\n}\n\nexport interface Cms {\n  lastUpdated: Date;\n  name: string;\n  version: string;\n  license: License[];\n  inception: Date;\n  category: Category[];\n  systemRequirements: string | null;\n  specialFeatures: string | null;\n  gitHubURL: any | null;\n  teaser: any | null;\n  properties: {\n    [x: string]: CmsProperty;\n  };\n\n  [x: string]: {} | Date | string | License[] | null | Category[];\n}\n\nexport interface FilterResult {\n  cmsKey: string;\n  has: FilterFieldSet;\n  hasNot: FilterFieldSet;\n  hasRequiredShare: number;\n  hasNiceToHaveShare: number;\n  satisfactory: boolean;\n}\n\nexport enum FilterPreset {\n  OPEN_SOURCE,\n  CLOUD_SERVICE,\n  ENTERPRISE,\n  DOCKER,\n  GRAPHQL,\n}\nexport const allFilterPresets = (): {\n  name: string;\n  preset: FilterPreset;\n}[] => {\n  return [\n    { name: \"Open Source\", preset: FilterPreset.OPEN_SOURCE },\n    { name: \"Cloud Service\", preset: FilterPreset.CLOUD_SERVICE },\n    { name: \"Enterprise\", preset: FilterPreset.ENTERPRISE },\n    { name: \"Docker\", preset: FilterPreset.DOCKER },\n    { name: \"GraphQL\", preset: FilterPreset.GRAPHQL },\n  ];\n};\n\nexport const SHOW_ALL = \"ALL\";\ntype SHOW_ALL = typeof SHOW_ALL;\nexport const SHOW_CUSTOM = \"CUSTOM\";\ntype SHOW_CUSTOM = typeof SHOW_CUSTOM;\nexport type ActivePreset = FilterPreset | SHOW_ALL | SHOW_CUSTOM;\n\n////////////\n// FIELDS //\n////////////\n\nexport interface Field {\n  name: string;\n}\n\nexport type BasicField = ScoreField | CategoryField;\n\nexport interface ScoreField extends Field {\n  description: string;\n  value: null | ScoreValue;\n}\n\nexport interface CategoryField extends Field {\n  description: string;\n  [index: string]: any; // Contains only ScoreFields\n}\n\nexport interface SpecialField extends Field {\n  description: string;\n  values: any[];\n  possibleValues: any[];\n}\n\nexport interface FilterFieldSet {\n  basic: { [x: string]: BasicField };\n  special: { [x: string]: SpecialField };\n}\n\n////////////////////\n// CMS PROPERTIES //\n////////////////////\n\nexport enum PropertyType {\n  Boolean = \"B\",\n  Category = \"C\",\n}\n\nexport type CmsProperty = BooleanCmsProperty | CategoryCmsProperty;\n\nexport interface BooleanCmsProperty extends Field {\n  type: PropertyType;\n  description?: string;\n  value?: boolean;\n  info?: string;\n}\n\nexport interface CategoryCmsProperty extends Field {\n  type: PropertyType;\n  description?: string;\n  [index: string]: any; // Contains only BooleanCmsProperties\n}\n","import {\n  Cms,\n  FilterResult,\n  ScoreValue,\n  BasicField,\n  ScoreField,\n  SpecialField,\n  Category,\n  FilterFieldSet,\n  BooleanCmsProperty,\n  CategoryField,\n  Field,\n  PanelSettings,\n  FilterPreset,\n} from \"./Cms\";\nimport deepcopy from \"ts-deepcopy\";\nimport CmsService from \"./CmsService\";\n\nconst FilterService = {\n  /**\n   * Filters the cms acoording to @param formProperties.\n   * Returns all cms, satisfactory boolean is set accordingly.\n   */\n  filterCms: (\n    filterFields: FilterFieldSet,\n    cms: { [x: string]: Cms }\n  ): FilterResult[] => {\n    let filterResults: FilterResult[] = [];\n\n    const specialFieldKeys = Object.keys(filterFields.special);\n    const cmsKeys = Object.keys(cms);\n\n    for (let cmsKey of cmsKeys) {\n      const currentCms: any = cms[cmsKey];\n\n      let has: FilterFieldSet = { basic: {}, special: {} };\n      let hasNot: FilterFieldSet = { basic: {}, special: {} };\n\n      let requiredPropertyCount = 0;\n      let hasRequiredPropertyCount = 0;\n      let niceToHavePropertyCount = 0;\n      let hasNiceToHavePropertyCount = 0;\n\n      let satisfactory: boolean = true;\n\n      for (const fieldKey of specialFieldKeys) {\n        const currentField = filterFields.special[fieldKey];\n        const currentCmsProperty = currentCms[fieldKey];\n        const requiredValues: any[] = currentField.values;\n        if (\n          currentCms[fieldKey] !== undefined &&\n          FilterService.getArrayIntersection(requiredValues, currentCmsProperty)\n            .length > 0\n        ) {\n          has.special[fieldKey] = currentField;\n        } else {\n          hasNot.special[fieldKey] = currentField;\n          satisfactory = false;\n        }\n      }\n\n      const basicFieldKeys = Object.keys(filterFields.basic);\n      for (const fieldKey of basicFieldKeys) {\n        const currentField = filterFields.basic[fieldKey];\n        const currentCmsProperty = currentCms.properties[fieldKey];\n\n        if (CmsService.isScoreField(currentField)) {\n          if (isOfInterest(currentField)) {\n            const fieldIsRequired = isRequired(currentField);\n\n            fieldIsRequired\n              ? requiredPropertyCount++\n              : niceToHavePropertyCount++;\n\n            if (cmsHasProperty(currentCmsProperty as BooleanCmsProperty)) {\n              has.basic[fieldKey] = currentField;\n              fieldIsRequired\n                ? hasRequiredPropertyCount++\n                : hasNiceToHavePropertyCount++;\n            } else {\n              hasNot.basic[fieldKey] = currentField;\n              if (fieldIsRequired) satisfactory = false;\n            }\n          }\n        } else {\n          const hasCategoryField = {\n            name: currentField.name,\n            description: currentField.description,\n          } as CategoryField;\n          const hasNotCategoryField = Object.assign({}, hasCategoryField);\n\n          const subFieldKeys = CmsService.getKeysOfSubFields(currentField);\n          for (const subFieldKey of subFieldKeys) {\n            const currentSubField = currentField[subFieldKey] as ScoreField;\n            const currentCmsSubProperty = currentCmsProperty[\n              subFieldKey\n            ] as BooleanCmsProperty;\n            if (isOfInterest(currentSubField)) {\n              const fieldIsRequired = isRequired(currentSubField);\n              fieldIsRequired\n                ? requiredPropertyCount++\n                : niceToHavePropertyCount++;\n\n              if (cmsHasProperty(currentCmsSubProperty)) {\n                hasCategoryField[subFieldKey] = currentSubField;\n                fieldIsRequired\n                  ? hasRequiredPropertyCount++\n                  : hasNiceToHavePropertyCount++;\n              } else {\n                hasNotCategoryField[subFieldKey] = currentSubField;\n                if (fieldIsRequired) satisfactory = false;\n              }\n            }\n\n            if (!categoryFieldIsEmpty(hasCategoryField)) {\n              has.basic[fieldKey] = hasCategoryField;\n            }\n\n            if (!categoryFieldIsEmpty(hasNotCategoryField)) {\n              hasNot.basic[fieldKey] = hasNotCategoryField;\n            }\n          }\n        }\n      }\n\n      filterResults.push({\n        cmsKey,\n        has,\n        hasNot,\n        hasRequiredShare:\n          requiredPropertyCount > 0\n            ? hasRequiredPropertyCount / requiredPropertyCount\n            : -1,\n        hasNiceToHaveShare:\n          niceToHavePropertyCount > 0\n            ? hasNiceToHavePropertyCount / niceToHavePropertyCount\n            : -1,\n        satisfactory,\n      });\n    }\n\n    filterResults = sortFilterResults(filterResults);\n\n    return filterResults;\n  },\n\n  getUnfilteredCms: (cms: { [x: string]: Cms }): FilterResult[] => {\n    const cmsKeys = Object.keys(cms);\n    return cmsKeys.map((cmsKey) => {\n      return {\n        cmsKey: cmsKey,\n        has: { basic: {}, special: {} },\n        hasRequiredShare: -1,\n        hasNiceToHaveShare: -1,\n        hasNot: { basic: {}, special: {} },\n        satisfactory: true,\n      };\n    });\n  },\n\n  getFilteredFilterFields: (\n    panelSettings: PanelSettings,\n    filterFields: { current: FilterFieldSet; untouched: FilterFieldSet }\n  ): FilterFieldSet => {\n    if (\n      !panelSettings.showModifiedOnly &&\n      panelSettings.fieldFilterString.length === 0\n    ) {\n      return filterFields.current;\n    }\n\n    const untouchedFields: FilterFieldSet = filterFields.untouched;\n\n    const workFields = deepcopy<FilterFieldSet>(filterFields.current);\n\n    if (panelSettings.showModifiedOnly) {\n      const specialFieldKeys = Object.keys(workFields.special);\n\n      specialFieldKeys.forEach((key: string) => {\n        const currentField = workFields.special[key];\n        const referenceField = untouchedFields.special[key];\n        if (arraysAreEqual(currentField.values, referenceField.values)) {\n          delete workFields.special[key];\n        }\n      });\n\n      const basicFieldKeys = Object.keys(workFields.basic);\n\n      for (const fieldKey of basicFieldKeys) {\n        const currentField = workFields.basic[fieldKey];\n\n        if (CmsService.isScoreField(currentField)) {\n          const untouchedField = untouchedFields.basic[fieldKey] as ScoreField;\n          if (currentField.value === untouchedField.value) {\n            delete workFields.basic[fieldKey];\n          }\n        } else {\n          const subFieldKeys = CmsService.getKeysOfSubFields(currentField);\n          for (const subFieldKey of subFieldKeys) {\n            const currentSubField = (workFields.basic[\n              fieldKey\n            ] as CategoryField)[subFieldKey];\n\n            const untouchedSubField = (untouchedFields.basic[\n              fieldKey\n            ] as CategoryField)[subFieldKey];\n\n            if (currentSubField.value === untouchedSubField.value) {\n              delete (workFields.basic[fieldKey] as CategoryField)[subFieldKey];\n            }\n          }\n          if (categoryFieldIsEmpty(workFields.basic[fieldKey])) {\n            delete workFields.basic[fieldKey];\n          }\n        }\n      }\n    }\n\n    const fieldFilterString = panelSettings.fieldFilterString;\n\n    if (fieldFilterString.length > 0) {\n      const specialFieldKeys = Object.keys(workFields.special);\n\n      specialFieldKeys.forEach((fieldKey: string) => {\n        const currentField = workFields.special[fieldKey];\n        if (!fieldNameContainsString(currentField, fieldFilterString)) {\n          delete workFields.special[fieldKey];\n        }\n      });\n\n      const basicFieldKeys = Object.keys(workFields.basic);\n      for (const fieldKey of basicFieldKeys) {\n        const currentField = workFields.basic[fieldKey];\n        if (CmsService.isScoreField(currentField)) {\n          if (!fieldNameContainsString(currentField, fieldFilterString)) {\n            delete workFields.basic[fieldKey];\n          }\n        } else {\n          if (!fieldNameContainsString(currentField, fieldFilterString)) {\n            // If category itself does not match the search string, filter the subProperties in the category\n            const subFieldKeys = CmsService.getKeysOfSubFields(currentField);\n\n            for (const subFieldKey of subFieldKeys) {\n              const currentSubField = (currentField as CategoryField)[\n                subFieldKey\n              ];\n              if (\n                !fieldNameContainsString(currentSubField, fieldFilterString)\n              ) {\n                delete (workFields.basic[fieldKey] as CategoryField)[\n                  subFieldKey\n                ];\n              }\n            }\n\n            if (categoryFieldIsEmpty(workFields.basic[fieldKey])) {\n              delete workFields.basic[fieldKey];\n            }\n          }\n        }\n      }\n    }\n\n    return workFields;\n  },\n\n  /**\n   * Initializes all non-special FieldProperties to FilterProperties by setting values accordingly\n   * @returns an object containing all properties with values set to Score.DONT_CARE\n   */\n  initializeBasicFields: (basicFields: {\n    [x: string]: BasicField;\n  }): { [x: string]: BasicField } => {\n    const fields: { [x: string]: BasicField } = deepcopy<{\n      [x: string]: BasicField;\n    }>(basicFields);\n\n    const fieldKeys: string[] = Object.keys(fields);\n\n    for (const key of fieldKeys) {\n      const currentField = fields[key];\n      if (CmsService.isScoreField(currentField)) {\n        currentField.value = ScoreValue.DONT_CARE;\n      } else {\n        const subPropertyKeys = CmsService.getKeysOfSubFields(currentField);\n        for (const subKey of subPropertyKeys) {\n          const currentSubField = currentField[subKey] as ScoreField;\n          currentSubField.value = ScoreValue.DONT_CARE;\n        }\n      }\n    }\n    return fields;\n  },\n\n  initializeSpecialFields: (): { [x: string]: SpecialField } => {\n    const specialFields: { [x: string]: SpecialField } = {};\n    specialFields.category = {\n      name: \"Allowed Categories\",\n      description: \"Which featureset is offered by the cms?\",\n      values: Object.values(Category),\n      possibleValues: Object.values(Category),\n    };\n\n    return specialFields;\n  },\n\n  getArrayIntersection: (a: string[], b: string[]): string[] => {\n    return a.filter((value) => b.includes(value));\n  },\n\n  getPresetFilterFields: (\n    filterFields: FilterFieldSet,\n    preset: FilterPreset\n  ): FilterFieldSet => {\n    const newFilter = deepcopy<FilterFieldSet>(filterFields);\n    const basic = newFilter.basic;\n\n    switch (preset) {\n      case FilterPreset.OPEN_SOURCE:\n        basic[\"openSource\"].value = ScoreValue.REQUIRED;\n        basic[\"commercialSupportAvailable\"].value = ScoreValue.NICE_TO_HAVE;\n        break;\n      case FilterPreset.CLOUD_SERVICE:\n        basic[\"cloudService\"].value = ScoreValue.REQUIRED;\n        basic[\"cloudServiceHostedInEurope\"].value = ScoreValue.NICE_TO_HAVE;\n        break;\n      case FilterPreset.ENTERPRISE:\n        newFilter.special[\"category\"].values = [Category.Enterprise];\n        basic[\"commercialSupportAvailable\"].value = ScoreValue.REQUIRED;\n        basic[\"openSource\"].value = ScoreValue.NICE_TO_HAVE;\n        break;\n      case FilterPreset.DOCKER:\n        basic[\"onPremisesInstallation\"].value = ScoreValue.REQUIRED;\n        basic[\"dockerSupport\"].value = ScoreValue.REQUIRED;\n        break;\n      case FilterPreset.GRAPHQL:\n        const graphQl: CategoryField = basic[\"graphQl\"];\n        graphQl[\"api\"].value = ScoreValue.REQUIRED;\n        graphQl[\"mutations\"].value = ScoreValue.NICE_TO_HAVE;\n        graphQl[\"subscriptions\"].value = ScoreValue.NICE_TO_HAVE;\n        break;\n      default:\n        console.error(`No preset defined for ${preset}`);\n    }\n\n    return newFilter;\n  },\n};\n\nfunction sortFilterResults(filterResults: FilterResult[]): FilterResult[] {\n  filterResults.sort(function (x: FilterResult, y: FilterResult) {\n    if (x.satisfactory !== y.satisfactory) {\n      if (x.satisfactory) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n    if (x.hasRequiredShare < y.hasRequiredShare) return 1;\n    if (x.hasRequiredShare > y.hasRequiredShare) return -1;\n    if (x.satisfactory && y.satisfactory) {\n      if (x.hasNiceToHaveShare < y.hasNiceToHaveShare) return 1;\n      if (x.hasNiceToHaveShare > y.hasNiceToHaveShare) return -1;\n    }\n    if (x.cmsKey > y.cmsKey) return 1;\n    if (x.cmsKey < y.cmsKey) return -1;\n    return 0;\n  });\n  return filterResults;\n}\n\nfunction isOfInterest(scoreField: ScoreField): boolean {\n  return (\n    scoreField.value === ScoreValue.REQUIRED ||\n    scoreField.value === ScoreValue.NICE_TO_HAVE\n  );\n}\n\nfunction isRequired(scoreField: ScoreField): boolean {\n  return scoreField.value === ScoreValue.REQUIRED;\n}\n\nfunction fieldNameContainsString(field: Field, str: string) {\n  return field.name.toUpperCase().includes(str.toUpperCase());\n}\n\n/**\n * Checks if a CMS has a certain property\n */\nfunction cmsHasProperty(cmsProperty: BooleanCmsProperty): boolean {\n  if (cmsProperty && cmsProperty.value) {\n    if (typeof cmsProperty.value === \"boolean\") {\n      return cmsProperty.value;\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction categoryFieldIsEmpty(categoryProperty: CategoryField): boolean {\n  return CmsService.getKeysOfSubFields(categoryProperty).length === 0;\n}\n\nfunction arraysAreEqual(a: any[], b: any[]): boolean {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport default FilterService;\n","import {\n  Cms,\n  CmsProperty,\n  BooleanCmsProperty,\n  Category,\n  License,\n  BasicField,\n  ScoreField,\n  CategoryCmsProperty,\n  CategoryField,\n  PropertyType,\n  ReceivedCmsData,\n} from \"./Cms\";\nimport FilterService from \"./FilterService\";\n\nconst CMS_REPO_BASE_URL =\n  \"https://raw.githubusercontent.com/gentics/headless-cms-comparison/refactor/\";\nconst CMS_LIST_PATH = `${CMS_REPO_BASE_URL}/cms-list.json`;\n\nlet cmsData: Promise<any>;\n\nconst CmsService = {\n  getCmsData: function (): Promise<any> {\n    if (!cmsData) {\n      cmsData = fetch(CMS_LIST_PATH)\n        .then((response) => response.json())\n        .then((data) => {\n          return fetchCmsData(data.fields, data.cms);\n        })\n        .then((rawCmsData) => {\n          return rawCmsData;\n        });\n    }\n    return cmsData;\n  },\n\n  getKeysOfSubFields: function (\n    category: CategoryCmsProperty | CategoryField\n  ): string[] {\n    return Object.keys(category).filter(\n      (key) => key !== \"name\" && key !== \"description\"\n    );\n  },\n\n  isScoreField: function (x: BasicField): x is ScoreField {\n    if (!x) return false;\n    return (x as ScoreField).value !== undefined;\n  },\n};\n\n/**\n * Fetches the CMS-Data from the github-repo\n * @param cmsKeyList represents the list of cms\n * with the names set to match the json-files in the repo.\n * @returns a promise containing all fetch-processes,\n * when resolved the promise returns an object with two properties:\n * fields: Object containing field-properties\n * cms: Array containing cms-objects\n */\nasync function fetchCmsData(\n  fields: string,\n  cms: string[]\n): Promise<ReceivedCmsData> {\n  let promises: Promise<any>[] = [];\n  [fields, ...cms].forEach((cms: string) => {\n    promises.push(\n      fetch(CMS_REPO_BASE_URL + cms + \".json\")\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response.json();\n        })\n        .then((data) => {\n          return data;\n        })\n    );\n  });\n\n  const values = await Promise.all(promises);\n  const fieldsData = values[0];\n  let rawCms: Cms[] = values.slice(1);\n  rawCms = sortCmsByName(rawCms);\n  const parsedCms: { [x_1: string]: Cms } = {};\n  for (let i = 0; i < rawCms.length; i++) {\n    parsedCms[cms[i]] = parseCms(rawCms[i]);\n  }\n  return { fields: fieldsData, cms: parsedCms };\n}\n\nfunction sortCmsByName(cmsArray: Cms[]) {\n  return cmsArray.sort((a, b) =>\n    a.name.toLowerCase() > b.name.toLowerCase()\n      ? 1\n      : b.name.toLowerCase() > a.name.toLowerCase()\n      ? -1\n      : 0\n  );\n}\n\nfunction parseCms(data: any): Cms {\n  // Parse licenses\n  const licenses: License[] = data.license.split(\"/\");\n  if (!licensesAreValid(licenses)) {\n    console.error(licenses);\n    throw new Error(`CMS ${data.name} has invalid or no licenses!`);\n  }\n\n  // Parse categories\n  const categories: Category[] = data.category.split(\"/\");\n  if (!categoriesAreValid(categories)) {\n    console.error(categories);\n    throw new Error(`CMS ${data.name} has invalid or no categories!`);\n  }\n\n  // Parse properties\n  const properties: { [x: string]: CmsProperty } = {};\n  const propertyKeys: string[] = Object.keys(data.properties);\n  for (const key of propertyKeys) {\n    const currentProperty: any = data.properties[key];\n    if (currentProperty.value !== undefined) {\n      properties[key] = parseValue(currentProperty);\n    } else {\n      const category: CategoryCmsProperty = {\n        type: PropertyType.Category,\n        name: currentProperty.name,\n        description: currentProperty.description,\n      };\n      properties[key] = category;\n      const subPropertyKeys = CmsService.getKeysOfSubFields(currentProperty);\n      for (const subKey of subPropertyKeys) {\n        category[subKey] = parseValue(currentProperty[subKey]);\n      }\n    }\n  }\n\n  const cms: Cms = {\n    lastUpdated: data.lastUpdated,\n    name: data.name,\n    version: data.version,\n    inception: data.inception,\n    systemRequirements: data.systemRequirements,\n    specialFeatures: data.specialFeatures,\n    license: licenses,\n    category: categories,\n    properties,\n    gitHubURL: data.gitHubURL,\n    teaser: data.teaser,\n  };\n\n  return cms;\n}\n\nconst parseValue = (p: any): BooleanCmsProperty => {\n  const validRe = /^(Yes|No|null)/;\n  const infoRe = /^(Yes|No)[,\\s*](.*)$/;\n  let value: boolean | undefined = undefined;\n  let info: string | undefined = undefined;\n\n  if (p.value) {\n    if (validRe.test(p.value)) {\n      value = p.value.startsWith(\"Yes\");\n      const match = infoRe.exec(p.value);\n      if (match) {\n        info = match[2];\n      }\n    } else {\n      console.warn(`Invalid value for ${p.name}: ${p.value}`);\n    }\n  }\n  return { name: p.name, value, info, type: PropertyType.Boolean };\n};\n\nfunction licensesAreValid(licenses: string[]): boolean {\n  return (\n    licenses.length > 0 &&\n    FilterService.getArrayIntersection(Object.values(License), licenses)\n      .length === licenses.length\n  );\n}\n\nfunction categoriesAreValid(categories: string[]): boolean {\n  return (\n    categories.length > 0 &&\n    FilterService.getArrayIntersection(Object.values(Category), categories)\n      .length === categories.length\n  );\n}\n\nexport default CmsService;\n","import React from \"react\";\nimport { FiCheckCircle, FiHelpCircle, FiSlash } from \"react-icons/fi\";\nimport { ColumnProps } from \"primereact/column\";\nimport { Link } from \"react-router-dom\";\n\nexport type CmsTableData = { [columnKey: string]: TableCellData }[];\nexport type BodyTemplate = (\n  rowData: TableRowData,\n  column: ColumnProps\n) => JSX.Element | null;\n\nexport type TableCellData = {\n  name: string;\n  value?: boolean | undefined;\n  description?: string;\n  info?: string;\n};\n\nexport type TableRowData = { [columnKey: string]: TableCellData };\n\nexport const TitleTemplate: BodyTemplate = (rowData, column) => {\n  if (!column.field) return null;\n  const cellData = rowData[column.field];\n  return (\n    <div className=\"d-flex justify-content-between\">\n      <span className=\"mr-2\">{cellData.name}</span>\n    </div>\n  );\n};\n\nexport const NameTemplate: BodyTemplate = (rowData, column) => {\n  if (!column.field) return null;\n  const cellData = rowData[column.field];\n  return <Link to={`/detail/${cellData.info}`}>{cellData.name}</Link>;\n};\n\nexport const BooleanPropertyTemplate: BodyTemplate = (rowData, column) => {\n  if (!column.field) return null;\n  const cellData = rowData[column.field];\n  const bool =\n    cellData && cellData.value !== null ? (\n      cellData.value ? (\n        <FiCheckCircle aria-label=\"yes\" style={{ color: \"green\" }} />\n      ) : cellData.value === undefined ? (\n        <FiHelpCircle aria-label=\"unknown\" style={{ color: \"orange\" }} />\n      ) : (\n        <FiSlash aria-label=\"no\" style={{ color: \"red\" }} />\n      )\n    ) : null;\n\n  const info = cellData?.info ? <span> {cellData.info}</span> : null;\n  return (\n    <>\n      {bool}\n      {info}\n    </>\n  );\n};\n\nexport const SpecialPropertyTemplate: BodyTemplate = (rowData, column) => {\n  if (!column.field) return null;\n  const cellData = rowData[column.field];\n  return cellData?.info ? <span>{cellData.info}</span> : null;\n};\n\nexport const sortData = (\n  data: CmsTableData,\n  event: { field: string; order: number }\n): CmsTableData => {\n  return data.sort((a: TableRowData, b: TableRowData) => {\n    const aData = a[event.field];\n    const bData = b[event.field];\n    const aValue = aData?.value ?? aData?.info ?? aData?.name;\n    const bValue = bData?.value ?? bData?.info ?? bData?.name;\n    return (aValue < bValue ? -1 : aValue > bValue ? 1 : 0) * event.order;\n  });\n};\n","import React from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Cms,\n  BooleanCmsProperty,\n  CmsData,\n  PropertyType,\n  CategoryField,\n  CategoryCmsProperty,\n  FilterFieldSet,\n} from \"./Cms\";\nimport CmsService from \"./CmsService\";\nimport {\n  BooleanPropertyTemplate,\n  NameTemplate,\n  BodyTemplate,\n  CmsTableData,\n  SpecialPropertyTemplate,\n  TableRowData,\n  sortData,\n} from \"./TableTemplates\";\n\nexport default function CmsList(props: {\n  cmsData: CmsData;\n  filterFields: FilterFieldSet;\n}) {\n  const data: CmsTableData = Object.keys(props.cmsData).map((cmsKey: string) =>\n    convertCmsToTableDataStructure(\n      props.cmsData[cmsKey],\n      cmsKey,\n      props.filterFields\n    )\n  );\n\n  const columns: JSX.Element[] = constructColumnDataStructure(\n    props.filterFields,\n    data\n  );\n\n  return (\n    <section id=\"list-view\">\n      <Helmet>\n        <title>List</title>\n      </Helmet>\n      <Container className=\"pb-5\">\n        <Card>\n          <DataTable\n            value={data}\n            autoLayout\n            scrollable\n            scrollHeight=\"calc(100vh - 500px)\"\n            className=\"\"\n            frozenWidth=\"140px\"\n          >\n            {columns}\n          </DataTable>\n        </Card>\n      </Container>\n    </section>\n  );\n}\n\nfunction constructColumnDataStructure(\n  filterFields: FilterFieldSet,\n  data: CmsTableData\n): JSX.Element[] {\n  const columns: JSX.Element[] = [\n    convertToColumn(\"name\", \"CMS-Name\", data, {\n      frozen: true,\n      template: NameTemplate,\n    }),\n  ];\n  const basicFieldKeys = Object.keys(filterFields.basic);\n  const specialFieldKeys = Object.keys(filterFields.special);\n  specialFieldKeys.forEach((key: string) => {\n    columns.push(\n      convertToColumn(key, filterFields.special[key].name, data, {\n        template: SpecialPropertyTemplate,\n      })\n    );\n  });\n\n  for (const currentFieldKey of basicFieldKeys) {\n    const currentField = filterFields.basic[currentFieldKey];\n    if (currentField.value !== undefined) {\n      columns.push(\n        convertToColumn(currentFieldKey, currentField.name, data, {\n          template: BooleanPropertyTemplate,\n        })\n      );\n    } else {\n      const category: CategoryField = currentField;\n      const subFieldKeys = CmsService.getKeysOfSubFields(category);\n      for (const currentSubPropertyKey of subFieldKeys) {\n        const currentSubField = category[currentSubPropertyKey];\n        columns.push(\n          convertToColumn(\n            currentSubPropertyKey,\n            `${currentField.name}: ${currentSubField.name}`,\n            data,\n            { template: BooleanPropertyTemplate }\n          )\n        );\n      }\n    }\n  }\n\n  return columns;\n}\n\nfunction convertToColumn(\n  propertyKey: string,\n  propertyDisplayName: string,\n  data: CmsTableData,\n  props?: {\n    frozen?: boolean;\n    template?: BodyTemplate;\n  }\n): JSX.Element {\n  return (\n    <Column\n      key={propertyKey}\n      field={propertyKey}\n      header={propertyDisplayName}\n      frozen={props && props.frozen}\n      // style={{ width: \"220px\" }}\n      body={props && props.template ? props.template : null}\n      className={props && props.frozen ? \"cmsTableNameColumn\" : undefined}\n      sortable\n      sortFunction={(e) => sortData(data, e)}\n    />\n  );\n}\n\nfunction convertCmsToTableDataStructure(\n  cms: Cms,\n  cmsKey: string,\n  filterFields: FilterFieldSet\n): TableRowData {\n  const tableCms: TableRowData = { name: { name: cms.name, info: cmsKey } };\n\n  Object.keys(filterFields.special).forEach((key: string) => {\n    const prop = cms[key];\n    tableCms[key] = { name: key, info: prop?.toString() };\n  });\n\n  Object.keys(filterFields.basic).forEach((key: string) => {\n    const prop = cms.properties[key];\n    if (prop) {\n      if (prop.type === PropertyType.Boolean) {\n        tableCms[key] = { name: prop.name, value: prop.value };\n      } else {\n        const category: CategoryCmsProperty = prop;\n        const subPropertyKeys = CmsService.getKeysOfSubFields(category);\n        for (const currentSubKey of subPropertyKeys) {\n          const currentSubProperty: BooleanCmsProperty =\n            category[currentSubKey];\n          tableCms[currentSubKey] = {\n            name: currentSubProperty.name,\n            value: currentSubProperty.value,\n          };\n        }\n      }\n    }\n  });\n  return tableCms;\n}\n","import React from \"react\";\nimport { Cms } from \"./Cms\";\n\ntype PropsType = {\n  cms: Cms;\n};\n\n// from https://tholman.com/github-corners/\n\nconst GithubRibbon = ({ cms }: PropsType) => {\n  const url = cms.gitHubURL.value;\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"github-corner\"\n      style={{ display: url.length > 0 ? \"block\" : \"none\" }}\n    >\n      <svg width=\"40\" height=\"40\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n        <path\n          d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n          fill=\"currentColor\"\n          className=\"octo-arm\"\n        ></path>\n        <path\n          d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n          fill=\"currentColor\"\n          className=\"octo-body\"\n        ></path>\n      </svg>\n    </a>\n  );\n};\n\nexport default GithubRibbon;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { GrLicense } from \"react-icons/gr\";\nimport { FiSlash, FiCheckCircle, FiAward, FiBox } from \"react-icons/fi\";\nimport classnames from \"classnames\";\nimport { FilterResult, Cms } from \"./Cms\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport GithubRibbon from \"./GithubRibbon\";\n\nexport default function CardList(props: {\n  filterResults: FilterResult[];\n  cms: { [x: string]: Cms };\n}) {\n  return (\n    <div className=\"container\">\n      <div className=\"cards\">\n        <Cards {...props} />\n      </div>\n    </div>\n  );\n}\n\nfunction Cards(props: {\n  filterResults: FilterResult[];\n  cms: { [x: string]: Cms };\n}) {\n  const filterResults = props.filterResults;\n  const cms = props.cms;\n\n  if (satisfactoryResultsExist(filterResults)) {\n    let cards: JSX.Element[] = [];\n    let cardNumber = 1;\n    filterResults.forEach((result) => {\n      cards.push(\n        <CmsCard\n          key={result.cmsKey}\n          cms={cms[result.cmsKey]}\n          filterResult={result}\n          cardNumber={cardNumber}\n        />\n      );\n      cardNumber++;\n      if (cardNumber > 5) {\n        cardNumber = 1;\n      }\n    });\n    return <>{cards}</>;\n  } else {\n    return <NoResultsCard />;\n  }\n}\n\nfunction satisfactoryResultsExist(filterResults: FilterResult[]) {\n  return filterResults.some((result) => result.satisfactory);\n}\n\nfunction CmsTeaser(props: { cms: Cms }) {\n  if (props.cms.teaser.value) {\n    return <p>{props.cms.teaser.value}</p>;\n  }\n  return (\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus beatae\n      dignissimos incidunt ipsa nisi sed tempora ut. Ex, itaque, rerum.\n    </p>\n  );\n}\n\nfunction CmsCard(props: {\n  cms: Cms;\n  filterResult: FilterResult;\n  cardNumber: number;\n}) {\n  const classes = classnames(\n    \"card\",\n    \"card-line\",\n    `card-color-${props.cardNumber}`,\n    { \"card-deactivated\": !props.filterResult.satisfactory }\n  );\n  return (\n    <div className=\"mix\">\n      <div className={classes} key={props.filterResult.cmsKey}>\n        <GithubRibbon cms={props.cms} />\n        <LinkContainer\n          to={`/detail/${props.filterResult.cmsKey}`}\n          className=\"cmsCardLink\"\n        >\n          <Card.Body className=\"text-left\">\n            <h2>{props.cms.name}</h2>\n            <CmsCardText {...props} />\n\n            <CmsTeaser cms={props.cms} />\n          </Card.Body>\n        </LinkContainer>\n      </div>\n    </div>\n  );\n}\n\nfunction CmsCardText(props: { cms: Cms; filterResult: FilterResult }) {\n  let cardListElements: JSX.Element[] = [];\n\n  cardListElements.push(\n    <li key={`${props.filterResult.cmsKey}_license`}>\n      <GrLicense /> {props.cms.license.toString()}\n    </li>\n  );\n\n  cardListElements.push(\n    <li key={`${props.filterResult.cmsKey}_category`}>\n      <FiBox /> {props.cms.category.toString()}\n    </li>\n  );\n\n  if (props.filterResult.hasRequiredShare !== -1) {\n    if (props.filterResult.hasRequiredShare === 1) {\n      cardListElements.push(\n        <li key={`${props.filterResult.cmsKey}_fulfill`}>\n          <FiCheckCircle /> Fulfills all essential requirements\n        </li>\n      );\n    } else if (props.filterResult.hasRequiredShare > 0) {\n      cardListElements.push(\n        <li key={`${props.filterResult.cmsKey}_fulfill`}>\n          <FiSlash /> Fulfills only{\" \"}\n          {(props.filterResult.hasRequiredShare * 100).toFixed(0)}% of the\n          essential requirements\n        </li>\n      );\n    } else {\n      cardListElements.push(\n        <li key={`${props.filterResult.cmsKey}_fulfill`}>\n          <FiSlash /> Fulfills none of the essential requirements\n        </li>\n      );\n    }\n  }\n\n  if (\n    props.filterResult.satisfactory &&\n    props.filterResult.hasNiceToHaveShare !== -1\n  ) {\n    cardListElements.push(\n      <li key={`${props.filterResult.cmsKey}_niceToHaveShare`}>\n        <OverlayTrigger\n          placement=\"bottom\"\n          delay={{ show: 100, hide: 200 }}\n          overlay={renderNiceToHaveProgressBarTooltip(\n            props.filterResult.cmsKey,\n            props.filterResult.hasNiceToHaveShare\n          )}\n        >\n          <div className=\"d-inline-flex w-100\">\n            <FiAward style={{ marginRight: \"0.5em\" }} />\n            <ProgressBar\n              style={{ width: \"100%\" }}\n              animated\n              now={props.filterResult.hasNiceToHaveShare * 100}\n              variant=\"info\"\n            />\n          </div>\n        </OverlayTrigger>\n      </li>\n    );\n  }\n\n  return (\n    <ul style={{ listStyleType: \"none\", paddingLeft: 0 }}>\n      {cardListElements}\n    </ul>\n  );\n}\n\nfunction renderNiceToHaveProgressBarTooltip(cmsKey: string, share: number) {\n  let barText: string;\n  if (share === 1) {\n    barText = \"Has all nice-to-have properties\";\n  } else if (share > 0) {\n    barText =\n      \"Has \" + (share * 100).toFixed(0) + \"% of nice-to-have properties\";\n  } else {\n    barText = \"Has no nice-to-have properties\";\n  }\n  return <Tooltip id={`Tooltip_ProgressBar_${cmsKey}`}>{barText}</Tooltip>;\n}\n\nfunction NoResultsCard() {\n  return (\n    <div className=\"my-2 mx-2 w-75\">\n      <Card bg=\"light\" border=\"dark\">\n        <Card.Body>\n          <Card.Title>\n            <span role=\"img\" aria-label=\"Not amused\">\n              😐\n            </span>{\" \"}\n            No CMS matches your requirements...\n          </Card.Title>\n          <Card.Text>\n            Deselect some of the specified requirements and try again!\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FilterFieldSet,\n  FilterResult,\n  Cms,\n  ScoreValue,\n  BasicField,\n  ScoreField,\n  CmsData,\n  CategoryCmsProperty,\n  CategoryField,\n  PropertyType,\n  BooleanCmsProperty,\n} from \"./Cms\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {\n  FiCheckCircle,\n  FiBox,\n  FiPackage,\n  FiAward,\n  FiPower,\n  FiSlash,\n} from \"react-icons/fi\";\nimport { GrLicense } from \"react-icons/gr\";\nimport { MdUpdate } from \"react-icons/md\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport deepcopy from \"ts-deepcopy\";\nimport CmsService from \"./CmsService\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Helmet } from \"react-helmet\";\n\nimport {\n  TitleTemplate,\n  BooleanPropertyTemplate,\n  CmsTableData,\n  sortData,\n} from \"./TableTemplates\";\n\nexport default function CmsDetailView(props: {\n  filterFields: FilterFieldSet;\n  filterResults: FilterResult[];\n  cmsData: CmsData;\n}) {\n  const { cmsKey } = useParams();\n  let filterResult: FilterResult;\n  let cms: Cms;\n\n  if (cmsKey && props.cmsData[cmsKey]) {\n    cms = props.cmsData[cmsKey];\n    const filterResultIndex = props.filterResults.findIndex(\n      (filterResult) => filterResult.cmsKey === cmsKey\n    );\n    filterResult = props.filterResults[filterResultIndex];\n  } else {\n    return (\n      <Alert variant=\"warning\">\n        Invalid CMS key was given! Go back to the{\" \"}\n        <Link to=\"/card\">\n          <Button>Card View</Button>\n        </Link>{\" \"}\n        and select a CMS!\n      </Alert>\n    );\n  }\n\n  const genericValues: CmsTableData = [];\n  const categoryValues: { [category: string]: CmsTableData } = {};\n\n  const basicFilterFields = props.filterFields.basic;\n  Object.keys(basicFilterFields).forEach((key: string) => {\n    const prop = cms.properties[key];\n    if (prop) {\n      if (prop.type === PropertyType.Boolean) {\n        genericValues.push({\n          name: {\n            name: prop.name,\n            description: basicFilterFields[key].description,\n          },\n          value: {\n            name: prop.name,\n            value: prop.value,\n            info: prop.info,\n          },\n        });\n      } else {\n        const basicFilterSubFields: CategoryField = basicFilterFields[key];\n        const catprop: CategoryCmsProperty = prop;\n        const subFieldKeys = CmsService.getKeysOfSubFields(\n          basicFilterFields[key]\n        );\n        subFieldKeys.forEach((subkey: string) => {\n          const subprop: BooleanCmsProperty = catprop[subkey];\n          if (subprop) {\n            (categoryValues[prop.name] = categoryValues[prop.name] || []).push({\n              name: {\n                name: subprop.name,\n                description: basicFilterSubFields[subkey].description,\n              },\n              value: {\n                name: subprop.name,\n                value: subprop.value,\n                info: subprop.info,\n              },\n            });\n          }\n        });\n      }\n    }\n  });\n\n  const createCard = (name: string, values: CmsTableData): JSX.Element => (\n    <div className=\"mb-5\" key={name}>\n      <h5>{name || \"General\"} Features</h5>\n      <Card>\n        <DataTable value={values}>\n          <Column\n            header=\"Feature\"\n            field=\"name\"\n            sortable\n            sortFunction={(e) => sortData(values, e)}\n            body={TitleTemplate}\n          />\n          <Column\n            header=\"Supported?\"\n            field=\"value\"\n            style={{ width: \"20%\", textAlign: \"center\" }}\n            sortable\n            sortFunction={(e) => sortData(values, e)}\n            body={BooleanPropertyTemplate}\n          />\n        </DataTable>\n      </Card>\n    </div>\n  );\n\n  const genericCard = createCard(\"\", genericValues);\n  const categoryCards = Object.keys(categoryValues)\n    .sort()\n    .map(\n      (categoryName: string): JSX.Element =>\n        createCard(categoryName, categoryValues[categoryName])\n    );\n\n  return (\n    <section id=\"detail-view\" className=\"pb-5\">\n      <Helmet>\n        <title>{cms.name}</title>\n      </Helmet>\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"text-left mb-5\">\n              <Link to=\"/card\">\n                {\" \"}\n                <i className=\"pi pi-arrow-left\"></i> Back to the overview\n              </Link>\n            </div>\n            <Card className=\"p-2 d-flex flex-row justify-content-between\">\n              <span className=\"specialProperty\">\n                <GrLicense /> {cms.license}\n              </span>\n              <span className=\"specialProperty\">\n                <FiBox /> {cms.category.toString()}\n              </span>\n              <span className=\"specialProperty\">\n                <FiPackage /> Version {cms.version}\n              </span>\n              <span className=\"specialProperty\">\n                <FiPower /> {cms.inception}\n              </span>\n            </Card>\n\n            <PropertyList name={cms.name} filterResult={filterResult} />\n\n            <h3 className=\"my-5\" key=\"all\">\n              All Features of {cms.name}\n            </h3>\n\n            <Row>\n              <Col>{genericCard}</Col>\n              <Col>{categoryCards}</Col>\n            </Row>\n\n            <span className=\"lastUpdated\">\n              <MdUpdate className=\"mr-1\" /> This information was last updated on{\" \"}\n              {new Date(cms.lastUpdated).toDateString()}\n            </span>\n            <span></span>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n}\n\nfunction PropertyList(props: { filterResult: FilterResult; name: string }) {\n  const hasProperties = categorizePropertiesByScores(\n    props.filterResult.has.basic\n  );\n\n  const hasNotProperties = categorizePropertiesByScores(\n    props.filterResult.hasNot.basic\n  );\n\n  let categorizedProperties: {\n    required: {\n      has: { [x: string]: ScoreField };\n      hasNot: { [x: string]: ScoreField };\n    };\n    niceToHave: {\n      has: { [x: string]: ScoreField };\n      hasNot: { [x: string]: ScoreField };\n    };\n  } = {\n    required: {\n      has: hasProperties.required,\n      hasNot: hasNotProperties.required,\n    },\n    niceToHave: {\n      has: hasProperties.niceToHave,\n      hasNot: hasNotProperties.niceToHave,\n    },\n  };\n\n  const requiredListItems = constructResultListItems(\n    categorizedProperties.required\n  );\n\n  if (requiredListItems.length > 0) {\n    requiredListItems.push(\n      <RequiredSummaryListItem key=\"requiredSummary\" {...props} />\n    );\n  }\n\n  const niceToHaveListItems = constructResultListItems(\n    categorizedProperties.niceToHave\n  );\n\n  if (niceToHaveListItems.length > 0) {\n    niceToHaveListItems.push(\n      <NiceToHaveSummaryListItem key=\"niceToHaveSummary\" {...props} />\n    );\n  }\n\n  return (\n    <div>\n      <h5\n        key=\"required\"\n        className=\"mt-5\"\n        style={{ display: requiredListItems.length > 0 ? \"block\" : \"none\" }}\n      >\n        Your required features of {props.name}\n      </h5>\n      <Card\n        className=\"info-box mb-5\"\n        style={{ display: requiredListItems.length > 0 ? \"block\" : \"none\" }}\n      >\n        <div className=\"p-datatable\">\n          <table>\n            <thead className=\"p-datatable-thead\">\n              <tr>\n                <th\n                  className=\"p-sortable-column\"\n                  aria-sort=\"none\"\n                  style={{ width: \"80%\", textAlign: \"left\" }}\n                >\n                  <span className=\"p-column-title\">Feature</span>\n                </th>\n                <th\n                  className=\"p-sortable-column\"\n                  aria-sort=\"none\"\n                  style={{ width: \"20%\", textAlign: \"center\" }}\n                >\n                  <span className=\"p-column-title\">Supported?</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>{requiredListItems}</tbody>\n          </table>\n        </div>\n      </Card>\n\n      <h5\n        key=\"nice-to-have\"\n        className=\"mt-5\"\n        style={{ display: niceToHaveListItems.length > 0 ? \"block\" : \"none\" }}\n      >\n        Your nice-to-have features of {props.name}\n      </h5>\n      <Card\n        className=\"info-box mb-5\"\n        style={{ display: niceToHaveListItems.length > 0 ? \"block\" : \"none\" }}\n      >\n        <div className=\"p-datatable\">\n          <table>\n            <thead className=\"p-datatable-thead\">\n              <tr>\n                <th\n                  className=\"p-sortable-column\"\n                  aria-sort=\"none\"\n                  style={{ width: \"80%\", textAlign: \"left\" }}\n                >\n                  <span className=\"p-column-title\">Feature</span>\n                </th>\n                <th\n                  className=\"p-sortable-column\"\n                  aria-sort=\"none\"\n                  style={{ width: \"20%\", textAlign: \"center\" }}\n                >\n                  <span className=\"p-column-title\">Supported?</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>{niceToHaveListItems}</tbody>\n          </table>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nfunction categorizePropertiesByScores(indexedPropertyArray: {\n  [x: string]: BasicField;\n}): {\n  required: { [x: string]: ScoreField };\n  niceToHave: { [x: string]: ScoreField };\n} {\n  let requiredProperties: { [x: string]: ScoreField } = {};\n  let niceToHaveProperties: { [x: string]: ScoreField } = {};\n\n  const indexedPropertyArrayCopy = deepcopy<{\n    [x: string]: BasicField;\n  }>(indexedPropertyArray);\n  const propertyKeys = Object.keys(indexedPropertyArrayCopy);\n\n  for (const propertyKey of propertyKeys) {\n    const currentProperty = indexedPropertyArrayCopy[propertyKey];\n    if (isScoreFilterProperty(currentProperty)) {\n      currentProperty.value === ScoreValue.REQUIRED\n        ? (requiredProperties[propertyKey] = currentProperty)\n        : (niceToHaveProperties[propertyKey] = currentProperty);\n    } else {\n      const hasSubKeys = CmsService.getKeysOfSubFields(currentProperty);\n\n      for (const subKey of hasSubKeys) {\n        const currentSubProperty = currentProperty[subKey];\n        currentSubProperty.name =\n          currentProperty.name + \": \" + currentSubProperty.name;\n        currentSubProperty.value === ScoreValue.REQUIRED\n          ? (requiredProperties[subKey] = currentSubProperty)\n          : (niceToHaveProperties[subKey] = currentSubProperty);\n      }\n    }\n  }\n  return {\n    required: requiredProperties,\n    niceToHave: niceToHaveProperties,\n  };\n}\n\nfunction isScoreFilterProperty(x: BasicField): x is ScoreField {\n  if (!x) return false;\n  return x.value !== undefined;\n}\n\nfunction constructResultListItems(fieldSet: {\n  has: { [x: string]: ScoreField };\n  hasNot: { [x: string]: ScoreField };\n}) {\n  let listItems: JSX.Element[] = [];\n\n  const hasKeys = Object.keys(fieldSet.has);\n  for (const hasKey of hasKeys) {\n    const currentProperty = fieldSet.has[hasKey];\n    listItems.push(\n      <ResultListItem key={hasKey} cmsHasProperty property={currentProperty} />\n    );\n  }\n\n  const hasNotKeys = Object.keys(fieldSet.hasNot);\n  for (const hasNotKey of hasNotKeys) {\n    const currentProperty = fieldSet.hasNot[hasNotKey];\n    listItems.push(\n      <ResultListItem key={hasNotKey} property={currentProperty} />\n    );\n  }\n\n  return listItems;\n}\n\nfunction ResultListItem(props: {\n  property: ScoreField;\n  cmsHasProperty?: boolean;\n}) {\n  const icon = props.cmsHasProperty ? <FiCheckCircle /> : <FiSlash />;\n  return (\n    <tr\n      className=\"resultListItem\"\n      // variant={props.cmsHasProperty ? undefined : \"light\"}\n    >\n      <td style={{ width: \"80%\", textAlign: \"left\" }}>\n        <span>{props.property.name}</span>\n      </td>\n      <td style={{ width: \"20%\", textAlign: \"center\" }}>{icon}</td>\n    </tr>\n  );\n}\n\nfunction RequiredSummaryListItem(props: { filterResult: FilterResult }) {\n  return (\n    <tr\n    // variant={props.filterResult.satisfactory ? \"success\" : \"warning\"}\n    >\n      <td colSpan={2}>\n        <h5 className=\"my-3 text-center\">\n          {props.filterResult.satisfactory ? <FiCheckCircle /> : <FiSlash />}{\" \"}\n          {`CMS ${\n            props.filterResult.satisfactory ? `satisfies` : `does not satisfy`\n          } all your essential requirements.`}\n        </h5>\n      </td>\n    </tr>\n  );\n}\n\nfunction NiceToHaveSummaryListItem(props: { filterResult: FilterResult }) {\n  return (\n    <tr className=\"\">\n      <td colSpan={2}>\n        <div className=\"d-flex\">\n          {props.filterResult.hasNiceToHaveShare > 0 ? (\n            <FiAward style={{ marginRight: \"0.5em\", fontSize: \"1.5em\" }} />\n          ) : (\n            <FiSlash style={{ marginRight: \"0.5em\", fontSize: \"1.5em\" }} />\n          )}{\" \"}\n          <ProgressBar\n            style={{ width: \"100%\" }}\n            animated\n            now={props.filterResult.hasNiceToHaveShare * 100}\n            variant=\"info\"\n            label={`${(props.filterResult.hasNiceToHaveShare * 100).toFixed(\n              0\n            )}%`}\n          />\n        </div>\n      </td>\n    </tr>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport Cookies from \"js-cookie\";\nimport ReactGA from \"react-ga\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Analytics = () => {\n  const [accepted, setAccepted] = useState(false);\n  function onAccepted() {\n    setAccepted(true);\n    ReactGA.initialize(\"UA-77960-5\", {\n      debug: process.env.NODE_ENV !== \"production\",\n    });\n  }\n  useEffect(() => {\n    if (Cookies.get(\"CookieConsent\")) {\n      onAccepted();\n    }\n  }, []);\n\n  const location = useLocation();\n  React.useEffect(() => {\n    if (accepted) {\n      ReactGA.pageview(location.pathname + location.search);\n    }\n  }, [accepted, location]);\n\n  return (\n    <CookieConsent onAccept={onAccepted}>\n      This website uses cookies.\n    </CookieConsent>\n  );\n};\n\nexport default Analytics;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Helmet } from \"react-helmet\";\n\nimport styles from \"./About.module.css\";\n\ntype PropTypes = {\n  githubUrl: string;\n  genticsUrl: string;\n};\n\nconst About = ({ githubUrl, genticsUrl }: PropTypes) => {\n  return (\n    <main className=\"pb-5\">\n      <Helmet>\n        <title>About</title>\n      </Helmet>\n      <Container>\n        <div className={styles.aboutContent}>\n          <p>\n            The information provided by this website is based on a{\" \"}\n            <a href={githubUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              public Github repository\n            </a>{\" \"}\n            and collected by{\" \"}\n            <a href={genticsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              Gentics\n            </a>\n            .\n          </p>\n          <p>\n            We are the company behind the headless CMS{\" \"}\n            <a\n              href=\"https://getmesh.io/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Gentics Mesh\n            </a>\n            , so it's hard to call us unbiased - please take all information\n            with a grain of salt. However, we try to collect facts only here -\n            if you disagree with any of the information shown, please create\n            pull request!\n          </p>\n          <p>\n            This website is based on the great work of{\" \"}\n            <a\n              href=\"https://headlesscms.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              HeadlessCMS\n            </a>\n            , which worked as both an inspiration and a data source.\n          </p>\n        </div>\n        <h2>Imprint</h2>\n        <div className={styles.imprint}>\n          <pre>\n            {`\n            APA-IT Informations Technologie GmbH\n            Laimgrubengasse 10\n            1060 Vienna\n            Austria\n            Tel.: +43 1 36060-0\n            Fax: +43 1 36060-6099\n            E-Mail: it@apa.at\n            Commercial register number: 195806a\n            Commercial register court: Handelsgericht Wien\n            VAT ID number: ATU53122400\n            Data registry number: 4012664\n            Member of the Austrian Federal Economic Chamber\n            Legal form: Limited liability company\n            © APA - Austria Press Agency eG. All rights reserved.\n\n            APA is a registered Austrian trademark and a European Community trademark.\n            `}\n          </pre>\n          <sub>\n            This website uses Google Analytics, a web analytic service provided\n            by Google Inc. (\"Google\"). Google Analytics uses so-called\n            \"cookies\", which are text files that are stored on your computer to\n            enable an analysis of the way you use this website. The information\n            generated by the cookie concerning your use of this website\n            (including your IP address) is transmitted to a Google server in the\n            USA and stored there. Google will use this information to analyse\n            your use of this website, to compile reports on website activities\n            for website operators and to provide additional services associated\n            with the website and internet use. If necessary, Google will also\n            pass this information on to third parties to the extent it is\n            prescribed by law or to the extent such third parties process the\n            data on Google's behalf. Under no circumstances will Google bring\n            your IP address into contact with other Google data. You can prevent\n            the installation of cookies through the appropriate configuration of\n            your browser software; however, we would like to point out that in\n            this case you will not be able to take full advantage of all of this\n            website's functions. By using this website you consent to the\n            processing of the data Google gathers about you in the manner and\n            for the purpose stated above.\n          </sub>\n        </div>\n      </Container>\n    </main>\n  );\n};\n\nexport default About;\n","import React, { ErrorInfo } from \"react\";\n\ntype ComponentProps = {};\ntype ComponentState = {\n  hasError: boolean;\n};\n\nexport class ErrorBoundary extends React.Component<\n  ComponentProps,\n  ComponentState\n> {\n  state: ComponentState;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(`Caught exception: ${error} - ${errorInfo}`);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <h2>\n          Well, that didn't work\n          <span role=\"img\" aria-label=\"Not amused\">\n            😐\n          </span>\n        </h2>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Header = () => {\n  return (\n    <header>\n      <Container>\n        <Row>\n          <Col className=\"col-6 align-self-center\">\n            <h1>Welcome to the Headless CMS Comparison Website</h1>\n            <h3>Find the perfect headless CMS for your requirements!</h3>\n          </Col>\n          <Col className=\"col-6 align-self-center hero\">\n            <img src=\"../images/ilustration.svg\" alt=\"\" />\n          </Col>\n        </Row>\n      </Container>\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 1140 192.9\"\n        className=\"svg-line\"\n      >\n        <g>\n          <path className=\"st0\" d=\"M0.2,11.2C2,12,3.8,12.8,5.7,13.7\" />\n          <path\n            className=\"st1\"\n            d=\"M16.5,19.2c43.5,22.9,99.8,63.8,160.7,95.8c16.1,8.4,41.4,13.6,70,7.3c4.8-1.1,51.9-12.2,68-52.2\n\t\t\tc2.8-6.9,11.6-28.7,0.7-45.6C306.7,10,290.7,2.5,278.5,0.9c-10.5-1.4-31,1.2-44.5,13c-8.5,7.4-11.2,17.2-11.9,19.8\n\t\t\tc-0.7,2.6-3.2,12.9,0.7,23.8c5,14.1,19.4,30.8,27.5,35.2c51.3,27.7,63.6,22.4,83.2,26.9c42.1,9.5,14.6,1.5,103.3,24.8\n\t\t\tc10.3,2.7,27.1,5.3,41.3,5c20.3-0.5,49.2-13.4,67-19.2c14.8-4.8,46-9,60.1,9.2c6.9,8.9,8.4,21.6,5.4,34.7\"\n          />\n          <path className=\"st0\" d=\"M609,179.9c-0.6,1.9-1.3,3.7-2.1,5.6\" />\n          <path\n            className=\"st2\"\n            d=\"M607.6,183.9l4.2-0.4l0,0.1l-4.6,4.3c-1.3,1.7-2.6,3.3-3.9,5c0.5-2,1-4.1,1.4-6.1l0.4-6.3l0.1-0.1L607.6,183.9z\"\n          />\n        </g>\n      </svg>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CmsData } from \"./Cms\";\nimport { useParams } from \"react-router-dom\";\n\ntype PropsType = {\n  title: string | CmsData;\n};\n\nconst SmallHeader = ({ title }: PropsType) => {\n  const { cmsKey } = useParams();\n\n  if (typeof title === \"object\") {\n    title = title[cmsKey].name;\n  }\n\n  return (\n    <header className=\"small\">\n      <Container>\n        <Row>\n          <Col className=\"col-12 align-self-center\">\n            <h1>{title}</h1>\n          </Col>\n        </Row>\n      </Container>\n    </header>\n  );\n};\n\nexport default SmallHeader;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nconst githubUrl = \"https://github.com/gentics/headless-cms-comparison\";\nconst Navigation = () => {\n  return (\n    <nav>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <div className=\"logo\">\n              <Link to=\"/\">CMS Comparison</Link>\n            </div>\n          </div>\n          <div className=\"col-6 text-right align-self-center\">\n            <ul>\n              <li>\n                <NavLink to=\"/card\">Card view</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/list\">List view</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/about\">About us</NavLink>\n              </li>\n              <li>\n                <a href={githubUrl}>Github</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// @ts-ignore\nexport default Navigation;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst year = new Date().getFullYear();\n\ntype PropsType = {\n  genticsUrl: string;\n};\n\nconst Footer = ({ genticsUrl }: PropsType) => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col>\n            <p>\n              CMS Comparison is hosted and maintained by{\" \"}\n              <a href={genticsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                Gentics\n              </a>\n              .\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"col-12\">\n            ©{\" \"}\n            <a href={genticsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              Gentics\n            </a>\n            , 2020{year > 2020 ? `-${year}` : null}.\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport { AiFillInfoCircle } from \"react-icons/ai\";\n\nconst Description = (props: { description: string }) => {\n  if (props.description) {\n    return (\n      <OverlayTrigger\n        placement=\"top\"\n        delay={{ show: 100, hide: 200 }}\n        overlay={renderTooltip(props.description)}\n      >\n        <AiFillInfoCircle size={`${1.5}em`} />\n      </OverlayTrigger>\n    );\n  } else {\n    return <span></span>;\n  }\n};\n\nfunction renderTooltip(description: string) {\n  return <Tooltip id={`Tooltip_${description}`}>{description}</Tooltip>;\n}\n\nexport default Description;\n","import React from \"react\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n// import Card from \"react-bootstrap/esm/Card\";\nimport { Card } from \"primereact/card\";\n\nimport {\n  ScoreValue,\n  FilterFieldSet,\n  SpecialField,\n  ScoreField,\n  CategoryField,\n} from \"./Cms\";\n\nimport CmsService from \"./CmsService\";\nimport Description from \"./Description\";\n\ntype InputChangeEvent = React.ChangeEvent<HTMLInputElement>;\n\ntype PropsType = {\n  filterFields: FilterFieldSet;\n  specialFieldChangeHandler: (event: InputChangeEvent) => void;\n  basicFieldChangeHandler: (\n    event: InputChangeEvent,\n    fieldKey: string,\n    categoryKey?: string\n  ) => void;\n};\n\nexport const FilterPropertyTable = (props: PropsType): JSX.Element => {\n  const {\n    filterFields,\n    specialFieldChangeHandler,\n    basicFieldChangeHandler,\n  } = props;\n\n  const generalRows: JSX.Element[] = [];\n  const categoryRows: {\n    [categoryName: string]: {\n      title: string;\n      description: string;\n      children: JSX.Element[];\n    };\n  } = {};\n\n  Object.keys(filterFields.special).forEach((fieldKey: string) => {\n    const currentField = props.filterFields.special[fieldKey];\n    generalRows.push(\n      <CheckboxRow\n        key={fieldKey}\n        specialField={currentField}\n        fieldKey={fieldKey}\n        changeHandler={specialFieldChangeHandler}\n      />\n    );\n  });\n\n  Object.keys(filterFields.basic).forEach((fieldKey: string) => {\n    const currentField = filterFields.basic[fieldKey];\n\n    if (CmsService.isScoreField(currentField)) {\n      generalRows.push(\n        <ScoreRow\n          key={fieldKey}\n          scoreField={currentField}\n          fieldKey={fieldKey}\n          changeHandler={basicFieldChangeHandler}\n        />\n      );\n    } else {\n      const children: JSX.Element[] = CmsService.getKeysOfSubFields(\n        currentField\n      ).map((subKey: string) => {\n        const currentField = (filterFields.basic[fieldKey] as CategoryField)[\n          subKey\n        ];\n        return (\n          <ScoreRow\n            key={`${fieldKey}_${subKey}`}\n            scoreField={currentField}\n            fieldKey={subKey}\n            changeHandler={basicFieldChangeHandler}\n            categoryKey={fieldKey}\n          />\n        );\n      });\n\n      categoryRows[fieldKey] = {\n        title: currentField.name,\n        description: currentField.description,\n        children,\n      };\n    }\n  });\n\n  const cards: JSX.Element[] = [];\n  if (generalRows.length > 0) {\n    cards.push(\n      <CategoryCard key=\"general\" title=\"General\" children={generalRows} />\n    );\n  }\n  Object.keys(categoryRows).forEach((categoryName: string) => {\n    const category = categoryRows[categoryName];\n    cards.push(<CategoryCard key={categoryName} {...category} />);\n  });\n\n  return (\n    <div style={{ maxHeight: \"100%\", overflow: \"yes\" }}>\n      <form id=\"filterForm\">\n        {cards.length > 0 ? cards : <NoResultsRow key=\"no\" />}\n      </form>\n    </div>\n  );\n};\n\nconst CheckboxRow = (props: {\n  specialField: SpecialField;\n  changeHandler: (e: InputChangeEvent) => void;\n  fieldKey: string;\n}): JSX.Element => {\n  let checkboxes: JSX.Element[] = [];\n  for (const possibleValue of props.specialField.possibleValues) {\n    checkboxes.push(\n      <SimpleCheckbox\n        key={`${props.fieldKey}_${possibleValue}`}\n        fieldKey={props.fieldKey}\n        value={possibleValue}\n        checked={props.specialField.values.includes(possibleValue)}\n        changeHandler={props.changeHandler}\n      />\n    );\n  }\n\n  return (\n    <div className=\"score-row\">\n      <div className=\"core-field-name\">\n        <span className=\"mr-2\">{props.specialField.name}</span>\n      </div>\n      <div className=\"score-checkboxes\">{checkboxes}</div>\n    </div>\n  );\n};\n\nconst SimpleCheckbox = (props: {\n  fieldKey: string;\n  value: string;\n  checked: boolean;\n  changeHandler: (e: InputChangeEvent) => void;\n}): JSX.Element => {\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        name={props.fieldKey}\n        value={props.value}\n        checked={props.checked}\n        onChange={props.changeHandler}\n        id={props.value}\n      />\n      <label htmlFor={props.value} style={{ paddingRight: \"2px\" }}>\n        {props.value}\n      </label>\n    </div>\n  );\n};\n\nconst CategoryCard = (props: {\n  title: string;\n  description?: string;\n  children: JSX.Element[];\n}): JSX.Element => {\n  const description = props.description ? (\n    <span className=\"description\">\n      <Description description={props.description} />\n    </span>\n  ) : null;\n  return (\n    <Card title={props.title} className=\"my-5\">\n      {description}\n      {props.children}\n    </Card>\n  );\n};\n\nconst ScoreRow = (props: {\n  scoreField: ScoreField;\n  changeHandler: (\n    event: InputChangeEvent,\n    fieldKey: string,\n    categoryKey?: string\n  ) => void;\n  fieldKey: string;\n  categoryKey?: string;\n}): JSX.Element => {\n  return (\n    <div className=\"score-row\">\n      <div className=\"core-field-name\">\n        <OverlayTrigger\n          placement=\"top\"\n          delay={{ show: 100, hide: 200 }}\n          overlay={\n            <Tooltip id={\"scoreFieldName\"}>\n              {props.scoreField.description}\n            </Tooltip>\n          }\n        >\n          <span>{props.scoreField.name}</span>\n        </OverlayTrigger>\n      </div>\n      <ScoreValueCheckbox\n        name={props.categoryKey + \"_\" + props.fieldKey}\n        value={props.scoreField.value || ScoreValue.DONT_CARE}\n        changeHandler={(e: InputChangeEvent) =>\n          props.changeHandler(e, props.fieldKey, props.categoryKey)\n        }\n      />\n    </div>\n  );\n};\n\nconst ScoreValueCheckbox = (props: {\n  name: string;\n  value: ScoreValue;\n  changeHandler: (e: InputChangeEvent) => void;\n}): JSX.Element => {\n  const { name, value, changeHandler } = props;\n  return (\n    <div className=\"switch-toggle\">\n      <input\n        id={name + \"_1\"}\n        name={name}\n        value={ScoreValue.NICE_TO_HAVE}\n        checked={value === ScoreValue.NICE_TO_HAVE}\n        onChange={(e: InputChangeEvent) => changeHandler(e)}\n        type=\"radio\"\n      />\n      <OverlayTrigger\n        placement=\"top\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={<Tooltip id={name + \"_1\"}>Nice to have option</Tooltip>}\n      >\n        <label htmlFor={name + \"_1\"}>\n          <i className=\"fas fa-smile\" aria-hidden=\"true\"></i>\n        </label>\n      </OverlayTrigger>\n\n      <input\n        id={name + \"_2\"}\n        name={name}\n        value={ScoreValue.DONT_CARE}\n        checked={value === ScoreValue.DONT_CARE}\n        onChange={(e: InputChangeEvent) => changeHandler(e)}\n        type=\"radio\"\n      />\n\n      <OverlayTrigger\n        placement=\"top\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={\n          <Tooltip id={name + \"_2\"}>I don't care about this option</Tooltip>\n        }\n      >\n        <label htmlFor={name + \"_2\"}>\n          <i className=\"fa fa-dice\" aria-hidden=\"true\"></i>\n        </label>\n      </OverlayTrigger>\n\n      <input\n        id={name + \"_3\"}\n        name={name}\n        value={ScoreValue.REQUIRED}\n        checked={value === ScoreValue.REQUIRED}\n        onChange={(e: InputChangeEvent) => changeHandler(e)}\n        type=\"radio\"\n      />\n      <OverlayTrigger\n        placement=\"top\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={<Tooltip id={name + \"_3\"}>Required option</Tooltip>}\n      >\n        <label htmlFor={name + \"_3\"}>\n          <i className=\"fa fa-exclamation\" aria-hidden=\"true\"></i>\n        </label>\n      </OverlayTrigger>\n    </div>\n  );\n};\n\nconst NoResultsRow = (): JSX.Element => {\n  return (\n    <>\n      <span role=\"img\" aria-label=\"Not amused\">\n        😐\n      </span>{\" \"}\n      No modified properties\n    </>\n  );\n};\n\nexport default FilterPropertyTable;\n","import React from \"react\";\nimport { Sidebar } from \"primereact/sidebar\";\nimport Form from \"react-bootstrap/Form\";\nimport { Card } from \"primereact/card\";\nimport {\n  PanelSettings,\n  FilterFieldSet,\n  CategoryField,\n  ActivePreset,\n  SHOW_CUSTOM,\n} from \"./Cms\";\n\nimport FilterService from \"./FilterService\";\nimport FilterPropertyTable from \"./FilterPropertyTable\";\n\ntype PropsType = {\n  filterFields: { current: FilterFieldSet; untouched: FilterFieldSet };\n  updateFilterFields: (\n    updatedFilterFields: FilterFieldSet,\n    preset: ActivePreset\n  ) => void;\n  showAside: boolean;\n  toggleAside: () => void;\n};\n\nexport const FilterAside = (props: PropsType): JSX.Element => {\n  const { filterFields, updateFilterFields, showAside, toggleAside } = props;\n  const [panelSettings, setPanelSettings] = React.useState<PanelSettings>({\n    showModifiedOnly: false,\n    fieldFilterString: \"\",\n  });\n\n  const handlePanelSettingsChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (event.target.name === \"showModifiedOnly\") {\n      setPanelSettings({\n        showModifiedOnly: event.target.checked,\n        fieldFilterString: panelSettings.fieldFilterString,\n      });\n    } else {\n      setPanelSettings({\n        showModifiedOnly: panelSettings.showModifiedOnly,\n        fieldFilterString: event.target.value,\n      });\n    }\n  };\n\n  const handleSpecialFieldChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const updatedFilterFields = Object.assign({}, filterFields.current);\n    const fieldKey = event.target.name;\n    const valueArray = updatedFilterFields.special[fieldKey].values;\n    const value = event.target.value;\n\n    if (event.target.checked) {\n      if (!valueArray.includes(value)) {\n        valueArray.push(value);\n      }\n    } else {\n      const valueIndex = valueArray.indexOf(value);\n      if (valueIndex !== -1) {\n        valueArray.splice(valueIndex, 1);\n      }\n    }\n\n    updatedFilterFields.special[fieldKey].values = valueArray;\n\n    updateFilterFields(updatedFilterFields, SHOW_CUSTOM);\n  };\n\n  const handleBasicFieldChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldKey: string,\n    categoryKey?: string\n  ) => {\n    // Clone object, otherwise react won't re-render\n    const updatedFilterFields = Object.assign({}, filterFields.current);\n\n    if (categoryKey) {\n      (updatedFilterFields.basic[categoryKey] as CategoryField)[\n        fieldKey\n      ].value = event.target.value;\n    } else {\n      updatedFilterFields.basic[fieldKey].value = event.target.value;\n    }\n\n    updateFilterFields(updatedFilterFields, SHOW_CUSTOM);\n  };\n\n  const filteredFilterFields = FilterService.getFilteredFilterFields(\n    panelSettings,\n    filterFields\n  );\n\n  return (\n    <Sidebar visible={showAside} onHide={() => toggleAside()}>\n      <Form>\n        {showAside ? (\n          <Card title=\"Filter for properties\" className=\"mt-5\">\n            <div className=\"p-3\">\n              <Form.Control\n                type=\"text\"\n                name=\"fieldFilterString\"\n                value={panelSettings.fieldFilterString}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handlePanelSettingsChange(e)\n                }\n              />\n            </div>\n            <div className=\"p-3 score-checkboxes\">\n              {\" \"}\n              <input\n                type=\"checkbox\"\n                name=\"showModifiedOnly\"\n                value={panelSettings.fieldFilterString}\n                checked={panelSettings.showModifiedOnly}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  handlePanelSettingsChange(e)\n                }\n                id=\"showModifiedOnly\"\n              />\n              <label htmlFor=\"showModifiedOnly\">\n                Show modified properties only\n              </label>\n            </div>\n          </Card>\n        ) : null}\n      </Form>\n      <FilterPropertyTable\n        filterFields={filteredFilterFields}\n        specialFieldChangeHandler={handleSpecialFieldChange}\n        basicFieldChangeHandler={handleBasicFieldChange}\n      />\n    </Sidebar>\n  );\n};\n\nexport default FilterAside;\n","import React from \"react\";\n\nimport {\n  FilterFieldSet,\n  FilterPreset,\n  allFilterPresets,\n  ActivePreset,\n  SHOW_ALL,\n  SHOW_CUSTOM,\n} from \"./Cms\";\n\nimport FilterService from \"./FilterService\";\nimport classNames from \"classnames\";\n\ntype PropsType = {\n  filterFields: { untouched: FilterFieldSet; activePreset: ActivePreset };\n  updateFilterFields: (\n    updatedFilterFields: FilterFieldSet,\n    preset: ActivePreset\n  ) => void;\n  toggleAside: () => void;\n};\n\nexport const FilterMenu = (props: PropsType): JSX.Element => {\n  const resetPanel = () => {\n    props.updateFilterFields(props.filterFields.untouched, SHOW_ALL);\n  };\n\n  const resetToPreset = (preset: FilterPreset): void => {\n    const newFilter = FilterService.getPresetFilterFields(\n      props.filterFields.untouched,\n      preset\n    );\n    props.updateFilterFields(newFilter, preset);\n  };\n\n  const activeClassFor = (preset: ActivePreset): string =>\n    classNames({ active: props.filterFields.activePreset === preset });\n\n  const presetButtons = allFilterPresets().map(\n    (p: { name: string; preset: FilterPreset }) => (\n      <li\n        key={p.preset}\n        onClick={() => resetToPreset(p.preset)}\n        className={activeClassFor(p.preset)}\n      >\n        {\" \"}\n        {p.name}{\" \"}\n      </li>\n    )\n  );\n\n  return (\n    <section id=\"filter-menu\">\n      <div className=\"w-75 filters\">\n        <ul className=\"controls\">\n          <li onClick={() => resetPanel()} className={activeClassFor(SHOW_ALL)}>\n            All\n          </li>\n          {presetButtons}\n          <li\n            onClick={() => props.toggleAside()}\n            className={activeClassFor(SHOW_CUSTOM)}\n          >\n            {\" \"}\n            Custom{\" \"}\n          </li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default FilterMenu;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport deepcopy from \"ts-deepcopy\";\n\nimport \"./css/style.scss\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"./App.css\";\n\nimport CmsList from \"./CmsList\";\nimport CmsCardList from \"./CmsCardList\";\nimport CmsDetailView from \"./CmsDetailView\";\nimport {\n  AppState,\n  Cms,\n  FilterFieldSet,\n  ReceivedCmsData,\n  ActivePreset,\n  SHOW_ALL,\n} from \"./Cms\";\nimport CmsService from \"./CmsService\";\nimport FilterService from \"./FilterService\";\nimport Analytics from \"./Analytics\";\nimport About from \"./About\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport Header from \"./Header\";\nimport SmallHeader from \"./SmallHeader\";\nimport Navigation from \"./Navigation\";\nimport Footer from \"./Footer\";\nimport FilterAside from \"./FilterAside\";\nimport FilterMenu from \"./FilterMenu\";\n\nfunction App() {\n  const [appState, setAppState] = React.useState<AppState>();\n\n  React.useEffect(() => {\n    CmsService.getCmsData().then((cmsData: ReceivedCmsData) => {\n      setAppState(constructAppState(cmsData));\n    });\n  }, []);\n\n  const updateFilterFields = (\n    updatedFilterFields: FilterFieldSet,\n    preset: ActivePreset\n  ): void => {\n    if (appState) {\n      const updatedAppState = deepcopy<AppState>(appState);\n      updatedAppState.filterResults = FilterService.filterCms(\n        updatedFilterFields,\n        appState.cms\n      );\n      const filterFields = updatedAppState.filterFields;\n      filterFields.current = updatedFilterFields;\n      filterFields.activePreset = preset;\n      setAppState(updatedAppState);\n    }\n  };\n\n  const toggleAside = (): void => {\n    if (appState) {\n      setAppState({ ...appState, showAside: !appState.showAside });\n    }\n\n    if (!appState?.showAside) {\n      document.body.classList.add(\"sidebar-open\");\n    } else {\n      document.body.classList.remove(\"sidebar-open\");\n    }\n  };\n\n  const githubUrl = \"https://github.com/gentics/headless-cms-comparison\";\n  const genticsUrl = \"https://www.gentics.com/genticscms/index.en.html\";\n\n  const content = appState ? (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navigation />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/card\" />\n        </Route>\n\n        <Route exact path=\"/card\">\n          <FilterAside\n            filterFields={appState.filterFields}\n            updateFilterFields={updateFilterFields}\n            showAside={appState.showAside}\n            toggleAside={toggleAside}\n          />\n          <Header />\n          <FilterMenu\n            filterFields={appState.filterFields}\n            updateFilterFields={updateFilterFields}\n            toggleAside={toggleAside}\n          />\n          <main>\n            <CmsCardList\n              filterResults={appState.filterResults}\n              cms={appState.cms}\n            />\n          </main>\n        </Route>\n\n        <Route exact path=\"/list\">\n          <SmallHeader title=\"List view\" />\n\n          <main>\n            <CmsList\n              filterFields={appState.filterFields.current}\n              cmsData={appState.cms}\n            />\n          </main>\n        </Route>\n\n        <Route path=\"/detail/:cmsKey\">\n          <SmallHeader title={appState.cms} />\n          <main>\n            <CmsDetailView\n              filterFields={appState.filterFields.current}\n              filterResults={appState.filterResults}\n              cmsData={appState.cms}\n            />\n          </main>\n        </Route>\n\n        <Route exact path=\"/about\">\n          <SmallHeader title=\"About us\" />\n          <main>\n            <About githubUrl={githubUrl} genticsUrl={genticsUrl} />\n          </main>\n        </Route>\n      </Switch>\n      <Footer genticsUrl={genticsUrl} />\n      <Analytics />\n    </Router>\n  ) : (\n    \"\"\n    // <Alert variant=\"info\">Loading data...</Alert>\n  );\n\n  return (\n    <div className=\"App\">\n      <Helmet\n        defaultTitle=\"Headless CMS Comparison\"\n        titleTemplate=\"Headless CMS Comparison - %s\"\n      />\n      <ErrorBoundary>{content}</ErrorBoundary>\n    </div>\n  );\n}\n\nfunction constructAppState(cmsData: {\n  fields?: { [x: string]: any };\n  cms: { [x: string]: Cms };\n}): AppState {\n  const filterFields: FilterFieldSet = { basic: {}, special: {} };\n  filterFields.basic = FilterService.initializeBasicFields(\n    cmsData.fields?.properties\n  );\n  filterFields.special = FilterService.initializeSpecialFields();\n\n  const untouchedFilterFields = deepcopy<FilterFieldSet>(filterFields);\n\n  const appState: AppState = {\n    cms: cmsData.cms,\n    filterFields: {\n      current: filterFields,\n      untouched: untouchedFilterFields,\n      activePreset: SHOW_ALL,\n    },\n    filterResults: FilterService.getUnfilteredCms(cmsData.cms),\n    showAside: false,\n  };\n  return appState;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imprint\":\"About_imprint__S0mMD\",\"aboutContent\":\"About_aboutContent__1M9qW\"};"],"sourceRoot":""}